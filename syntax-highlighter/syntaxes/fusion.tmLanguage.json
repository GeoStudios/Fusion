{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Fusion",
	"patterns": [
		{
			"include":"#comments_inline"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#strings_single"
		},
		{
			"include": "#strings_double"
		},
		{
			"include": "#paren-expression"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name":"support.constant",
					"match": "\\b(string|bool|int|float|void|Function|HashMap|Array|true|false|null)"
				},
				{
					"name": "keyword.control",
					"match": "\\b(fn|using|package|const|var|if|else|while|return|as)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.other",
			"begin": "(`)",
			"end": "(`)"
		},
		"strings_single": {
			"name": "string.quoted.single",
			"begin": "(')",
			"end": "(')"
		},
		"strings_double": {
			"name": "string.quoted.double",
			"begin": "(\")",
			"end": "(\")"
		},
		"paren-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
			  "0": { "name": "punctuation.paren.open" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.paren.close" }
			},
			"name": "expression.group",
			"patterns": [{ "include": "#expression" }]
		},
		"comments_inline": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "\\/\\/.*",
					"captures": {
						"0": {
					  "name": "punctuation.definition.comment"
					}
				}
			}
		]			
	},
	"functions": {
		  "patterns": [
			{
				"name": "support.function",
				"match": "\\b([^0-9=+-_~`!@#$%&*()\"']|[a-zA-Z])+[a-zA-Z0-9_]+[(]"
			},
			{
				"name": "constant.regexp",
				"match": "\\b([^0-9=+-_~`!@#$%&*()\"']|[a-zA-Z])+[a-zA-Z0-9_]"
			}
		  ]
	},
	"operators":{
		"patterns": [
			{
				"name": "keyword.operator.arithmetic",
				"match": "[+\\-*/%]"
			},
			{
				  "name": "keyword.operator.comparison",
				  "match": "[!=]==?|[<>]=?"
				},
				{
				  "name": "keyword.operator.logical",
				  "match": "[!&|]"
				}
			  ]
		},
		"numbers": {
			"patterns": [
				{
				  "name": "constant.numeric.integer",
				  "match": "\\b\\d+\\b"
				},
				{
				  "name": "constant.numeric.decimal",
				  "match": "\\b\\d+\\.\\d+\\b"
				},
				{
				  "name": "constant.numeric.scientific",
				  "match": "\\b\\d+\\.?\\d*[+-]?\\d+\\b"
				}
			  ]
		}
		
	},
	"scopeName": "source.fusion"
}